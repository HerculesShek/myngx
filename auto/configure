#!/bin/sh

# Copyright (C) Igor Sysoev


. auto/options
. auto/init
. auto/sources

# create objs directory
test -d $NGX_OBJS || mkdir $NGX_OBJS # "objs"

# create ngx_auto_headers.h ngx_auto_config.h and autoconf.err file
echo > $NGX_AUTO_HEADERS_H  # "objs/ngx_auto_headers.h"
echo > $NGX_AUTO_CONFIG_H   # "objs/ngx_auto_config.h"
echo > $NGX_AUTOCONF_ERR    # "objs/autoconf.err"


if [ $NGX_DEBUG = YES ]; then
    have=NGX_DEBUG . auto/have
fi

# 如果 $NGX_PLATFORM 为空
if test -z "$NGX_PLATFORM"; then
    echo "checking for OS"

    NGX_SYSTEM=`uname -s 2>/dev/null`   #  kernel-name `Linux` or `Darwin`
    NGX_RELEASE=`uname -r 2>/dev/null`  # kernel-release `3.10.0-957.1.3.el7.x86_64`
    NGX_MACHINE=`uname -m 2>/dev/null`  # machine hardware name `x86_64`

    echo " + $NGX_SYSTEM $NGX_RELEASE $NGX_MACHINE"

    NGX_PLATFORM="$NGX_SYSTEM:$NGX_RELEASE:$NGX_MACHINE"; # "Linux 3.10.0-957.1.3.el7.x86_64 x86_64"

else
    echo "building for $NGX_PLATFORM"
fi


if [ "$NGX_PLATFORM" != win32 ]; then # never use win32
    . auto/headers
fi

. auto/cc/conf
. auto/os/conf

if [ "$NGX_PLATFORM" != win32 ]; then
    . auto/os/features
    . auto/threads
fi

. auto/modules
. auto/lib/conf

. auto/make
. auto/lib/make
. auto/install

if [ "$NGX_PLATFORM" != win32 ]; then
    . auto/unix
fi

# STUB
. auto/stubs

have=NGX_PREFIX value="\"$NGX_PREFIX/\"" . auto/define
have=NGX_SBIN_PATH value="\"$NGX_SBIN_PATH\"" . auto/define
have=NGX_CONF_PATH value="\"$NGX_CONF_PATH\"" . auto/define
have=NGX_PID_PATH value="\"$NGX_PID_PATH\"" . auto/define
have=NGX_LOCK_PATH value="\"$NGX_LOCK_PATH\"" . auto/define
if test -n "$NGX_ERROR_LOG_PATH"; then
    have=NGX_ERROR_LOG_PATH value="\"$NGX_ERROR_LOG_PATH\"" . auto/define
fi

have=NGX_HTTP_LOG_PATH value="\"$NGX_HTTP_LOG_PATH\"" . auto/define
have=NGX_HTTP_CLIENT_TEMP_PATH value="\"$NGX_HTTP_CLIENT_TEMP_PATH\""
. auto/define
have=NGX_HTTP_PROXY_TEMP_PATH value="\"$NGX_HTTP_PROXY_TEMP_PATH\""
. auto/define
have=NGX_HTTP_FASTCGI_TEMP_PATH value="\"$NGX_HTTP_FASTCGI_TEMP_PATH\""
. auto/define

have=NGX_USER value="\"$NGX_USER\"" . auto/define
have=NGX_GROUP value="\"$NGX_GROUP\"" . auto/define

. auto/summary
